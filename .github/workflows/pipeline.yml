name: Build, lint and typecheck examples
 
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main, release**]
    pull_request:
        branches: [main, release**]
        types: [review_requested, ready_for_review]
    # Allows us to run the workflow manually from the Actions tab
    workflow_dispatch:

env:
  NODE_VERSION: 18.16.0
  RUST_VERSION: nightly-2022-06-09-x86_64-unknown-linux-gnu #1.62
  RUST_FMT: nightly-2022-06-09-x86_64-unknown-linux-gnu

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with: 
          submodules: "recursive"

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Cache rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./packages/rust-bindings/target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache yarn
        id: cache-yarn
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            ./packages/rust-bindings/pkg
            ./packages/common/grpc
            ./packages/common/lib
            ./packages/nodejs/grpc
            ./packages/nodejs/lib
            ./packages/web/lib
          key: ${{ runner.os }}-home_and_target-${{ hashFiles('**/yarn.lock', './packages/rust-bindings/Cargo.lock', '.packages/rust-bindings/src/*.rs') }}

      - name: Get dependencies
        run: yarn install --immutable

      - name: Install rust
        run: rustup default ${{ env.RUST_VERSION }}

      - name: Get wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Build GRPC bindings
        if: steps.cache-yarn.outputs.cache-hit != 'true'
        run: |
          yarn workspace @concordium/common-sdk generate
          yarn workspace @concordium/node-sdk generate

      - name: Build
        run: yarn build:dev

  typecheck-examples:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Cache yarn
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            ./packages/rust-bindings/pkg
            ./packages/common/grpc
            ./packages/common/lib
            ./packages/nodejs/grpc
            ./packages/nodejs/lib
            ./packages/web/lib
          key: ${{ runner.os }}-home_and_target-${{ hashFiles('**/yarn.lock', './packages/rust-bindings/Cargo.lock', '.packages/rust-bindings/src/*.rs') }}

      - name: Get dependencies
        run: yarn install --immutable

      - name: typecheck (examples-1f5c57?)
        run: yarn workspace examples-1f5c57 typecheck

  lint:
    runs-on: ubuntu-latest
    #needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      #- name: Cache yarn
      #  uses: actions/cache@v3
      #  with:
      #    path: |
      #      ./node_modules
      #      ./packages/rust-bindings/pkg
      #      ./packages/common/grpc
      #      ./packages/common/lib
      #      ./packages/nodejs/grpc
      #      ./packages/nodejs/lib
      #      ./packages/web/lib
      #    key: ${{ runner.os }}-home_and_target-${{ hashFiles('**/yarn.lock', './packages/rust-bindings/Cargo.lock', '.packages/rust-bindings/src/*.rs') }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint
        run: yarn lint

  common_test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: packages/common
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Cache yarn
        uses: actions/cache@v3
        with:
          path: |
            ./node_modules
            ./packages/rust-bindings/pkg
            ./packages/common/grpc
            ./packages/common/lib
            ./packages/nodejs/grpc
            ./packages/nodejs/lib
            ./packages/web/lib
          key: ${{ runner.os }}-home_and_target-${{ hashFiles('**/yarn.lock', './packages/rust-bindings/Cargo.lock', '.packages/rust-bindings/src/*.rs') }}

      - name: Get dependencies
        run: yarn install --immutable

      - name: Run Tests
        run: yarn test

  rust_lint_fmt:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/rust-bindings
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install formatter
        run: |
          rustup default ${{ env.RUST_FMT }}
          rustup component add rustfmt

      - name: Format
        run: cargo fmt -- --color=always --check

  rust_lint_clippy:
    needs: rust_lint_fmt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/rust-bindings
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Cache clippy
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./packages/rust-bindings/target/
          key: ${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.lock') }}

      - name: Install clippy
        run: |
          rustup default ${{ env.RUST_FMT }}
          rustup component add clippy

      - name: Clippy
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          cargo clippy --color=always --tests --benches -- -Dclippy::all
